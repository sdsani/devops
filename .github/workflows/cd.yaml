---
name: CD
on:  
  push: 
    branches: [ main ]
    paths:
      - 'hello-spring-boot-docker/**'      

  workflow_dispatch:
  
env:
  REPO_PATH: ${{github.actor}}
  ROOT_FOLDER: 'hello-spring-boot-docker'  
  image_path: ${{format('{0}/{1}', '${{github.actor}}', 'hello-spring-boot-docker')}}

jobs:

  cd:
    name: Code Deploy
    runs-on: ubuntu-latest
    #if: ${{inputs.event_name}} == 'push' && ${{inputs.event_ref}} == 'refs/heads/main'
    #strategy:
      # Cancel all matrix jobs if one of them fails
      #fail-fast: true
    outputs:
      tag_created: ${{ steps.tag_version.outputs.new_tag }}
      
    steps:          
      - name: Set up JDK    
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"
          
      - name: Code Checout                             
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
            
      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v1
        
      - name: Symantic tagging/verioning
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""
          custom_release_rules: | 
            bug:patch:Bug Fixes,
            chore:patch:Chores,            
            perf:patch:Performance Improvement,
            ci:patch:Continuous Integration,
            docs:patch:Documentation Improvement,
            style:patch:Code Style,
            refactor:patch:Refactoring/TODO's,
            test:patch:Tests,
            feat:minor:New Functionality,
            feature:minor:New Functionality,
            minor_upd:minor:Minor Update,
            major_upd:major:Major Update,
            major:major:Major Update
  
      - name: Build docker image
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootBuildImage
          build-root-directory: hello-spring-boot-docker
       
      - name: Image Scan
        uses: anchore/scan-action@v3
        with:
          image: $image_path:latest
      
      - name: Docker login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
       
      #https://pakstech.com/blog/github-actions-workflow-commands/
      - name: Tag and push docker images
        run: | 
          echo $GITHUB_REPOSITORY
      #    echo $new_tag
      #    echo ${{ github.event.repository.name }}
      #    echo "XXX : "$REPO_PATH
      #    echo "YYY : "$ROOT_FOLDER
      #    echo "Image_path: " $image_path
      #    docker images
      #    docker tag $image_path:latest $image_path:$new_tag 
      #    docker images
      #    docker push $image_path:latest
      #    docker push $image_path:$new_tag
      #  env:
      #    new_tag: ${{steps.tag_version.outputs.new_tag}}
      #    #image_path: ${{ format({0}/{1}, ${{env.REPO_PATH}}, ${{env.ROOT_FOLDER}} )}}
          
  deploy:
    uses: ./.github/workflows/deploy.yaml
    name: Deploy code to environments
    needs: [cd]
    with:
      event_name: ${{github.event_name}} 
      event_ref: ${{github.event.ref}}
      tag_name: ${{needs.cd.outputs.tag_created}}
    secrets:
      registry_username: ${{secrets.REGISTRY_USERNAME}}
      registry_password: ${{secrets.REGISTRY_PASSWORD}}
