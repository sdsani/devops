---
name: CD Contact UI
on:  
  push: 
    branches: [ main ]
    paths:
      - 'sb-docker-contact-ui/**'      

  workflow_dispatch:
  
env:
  ROOT_FOLDER: 'sb-docker-contact-ui'  
  image_path: $GITHUB_REPOSITORY_OWNER/$ROOT_FOLDER

jobs:

  cd:
    name: Code Deploy
    runs-on: ubuntu-latest
    #if: ${{inputs.event_name}} == 'push' && ${{inputs.event_ref}} == 'refs/heads/main'
    #strategy:
      # Cancel all matrix jobs if one of them fails
      #fail-fast: true
    outputs:
      tag_created: ${{ steps.tag_version.outputs.new_tag }}
      
    steps:          
      - name: Set up JDK    
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"
          
      - name: Code Checout                             
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
            
      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v1
        
      - name: Symantic tagging/verioning
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""
          custom_release_rules: | 
            bug:patch:Bug Fixes,
            chore:patch:Chores,            
            perf:patch:Performance Improvement,
            ci:patch:Continuous Integration,
            docs:patch:Documentation Improvement,
            style:patch:Code Style,
            refactor:patch:Refactoring/TODO's,
            test:patch:Tests,
            feat:minor:New Functionality,
            feature:minor:New Functionality,
            minor_upd:minor:Minor Update,
            major_upd:major:Major Update,
            major:major:Major Update
  
      - name: Setup path
        id: setup
        run: |
          echo "::set-output name=i_path::$GITHUB_REPOSITORY_OWNER/${{env.ROOT_FOLDER}}"
          echo "::set-output name=r_folder::${{ env.ROOT_FOLDER }}"

      - name: Build docker image
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootBuildImage
          build-root-directory: ${{steps.setup.outputs.r_folder}}
       
      - name: Docker login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
       
      #https://pakstech.com/blog/github-actions-workflow-commands/
      - name: Tag and push docker images
        run: | 
          echo "$GITHUB_REPOSITORY"
          echo "$new_tag"
          echo "${{ github.event.repository.name }}"
          echo "Image_path: $image_path"
          docker images
          docker tag "${{env.image_path}}:latest" "${{env.image_path}}:${{env.new_tag}}"
          docker images
          docker push "${{env.image_path}}:latest"
          docker push "${{env.image_path}}:${{env.new_tag}}"
        env:
          new_tag: ${{steps.tag_version.outputs.new_tag}}
          
  deploy:
    uses: ./.github/workflows/contact_ui_deploy.yaml
    name: Deploy Code To Environments
    needs: [cd]
    with:
      event_name: ${{github.event_name}} 
      event_ref: ${{github.event.ref}}
      tag_name: ${{needs.cd.outputs.tag_created}}
    secrets:
      registry_username: ${{secrets.REGISTRY_USERNAME}}
      registry_password: ${{secrets.REGISTRY_PASSWORD}}
