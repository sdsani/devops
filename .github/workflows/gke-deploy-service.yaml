name: Deploy Service to GKE

on: 
  workflow_call:
  #push:
  #  branches:
  #    - main

    inputs:
      SERVICE_PATH: 
        required: true
        type: string
      ACTION: 
        required: true
        type: string

env: 
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  GKE_REGION: us-central1
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: static-site

jobs:
  
  setup-deploy:
    name: Setup, and Deploy
    runs-on: ubuntu-latest
    environment: Development

    steps:

    - name: Debug
      run: |
        echo ${{secrets.GKE_SA_KEY}}
        echo ${{secrets.GKE_PROJECT}}

    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_REGION }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      if: ${{inputs.ACTION}} == 'DEPLOY'
      run: |
        ls -al
        kubectl rollout status ${{inputs.SERVICE_PATH}}
        kubectl get services -o wide

    - name: Rollback
      if: ${{inputs.ACTION}} == 'ROLLBACK'
      run: |
        ls -al
        kubectl delete ${{inputs.SERVICE_PATH}}
        kubectl get services -o wide
