name: CI Workflow for Java application.

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  workflow_dispatch:
  pull_request: 
    branches: [ main ]
    paths:
      - 'hello-spring-boot-docker/**'
      
  push:
    branches:
      - main
    #https://docs.github.com/en/actions/using-workflows/triggering-a-workflow
    paths:
      - 'hello-spring-boot-docker/**'

env:
  REPO_PATH: 'sdsani/'
  ROOT_FOLDER: 'hello-spring-boot-docker'  
  
jobs:
  # The first job lints the code base
  lint:
    name: Linter
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_HTML: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JAVASCRIPT_STANDARD: true

  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'pull_request'
    strategy:
      # Cancel all matrix jobs if one of them fails
      fail-fast: true
      matrix:
        # our matrix for testing acros OSs
        #os: [windows-2019, ubuntu-latest]
        os: [ubuntu-latest]

    steps:
      - name: Set up JDK    
        if: github.event_name == 'pull_request'
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"
          
      - name: Code Checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          github_token: env
          fetch-depth: 0

      - name: Run tests using gradle
        if: github.event_name == 'pull_request'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          build-root-directory: ${{env.ROOT_FOLDER}}

      - name: Build using Gradle
        if: github.event_name == 'pull_request'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: ${{env.ROOT_FOLDER}}

      #Be careful about following issue.
      #https://medium.com/prompt/trigger-another-github-workflow-without-using-a-personal-access-token-f594c21373ef
      #https://github.com/marketplace/actions/github-tag
      #- name: Symantic tagging/verioning
      #  if: github.event_name == 'push'
      #  id: tag_version
      #  uses: mathieudutour/github-tag-action@v6.0
      #  with:
      #    github_token: ${{ secrets.GITHUB_TOKEN }}
  cd:
    name: CD
    runs-on: ubuntu-latest
    strategy:
      # Cancel all matrix jobs if one of them fails
      fail-fast: true
    needs: ci
    if: github.event_name == 'push'
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      
    steps:          
      - name: Set up JDK    
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"
          
      - name: Code Checout                             
        uses: actions/checkout@v3
        with:
            fetch-depth: 0
            
      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v1
        
      - name: Symantic tagging/verioning
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build docker image
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootBuildImage
          build-root-directory: hello-spring-boot-docker
       
      - name: Docker login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Tag and push docker images
        run: |
          #https://pakstech.com/blog/github-actions-workflow-commands/
          echo $GITHUB_REPOSITORY
          echo $new_tag
          echo ${{ github.event.repository.name }}
          docker tag ${{env.REPO_PATH}}${{env.ROOT_FOLDER}}:latest ${{env.REPO_PATH}}${{env.ROOT_FOLDER}}:$new_tag 
          docker images
          docker push ${{env.REPO_PATH}}${{env.ROOT_FOLDER}}:latest
          docker push ${{env.REPO_PATH}}${{env.ROOT_FOLDER}}:$new_tag
        env:
          new_tag: ${{steps.sourse_step.tag_version.new_tag}}
          
          
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      # Cancel all matrix jobs if one of them fails
      fail-fast: true
    needs: cd
    
    steps:
      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v1
      
      - name: Docker login
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Deploy
        run: |
          echo ${{env.GITHUB_EVENT_NAME}}
          docker pull ${{env.REPO_PATH}}${{env.ROOT_FOLDER}}
          docker images
          echo "WIP: Deploy steps not implemented yet."
          echo "New tag created in CD passed to Deploy : "${{needs.cd.outputs.new_tag}}
