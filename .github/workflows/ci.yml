name: CI Workflow for Java application.

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - nonexistantbranchjustforexample
    #https://docs.github.com/en/actions/using-workflows/triggering-a-workflow
    paths:
      - 'hello-spring-boot-docker/**'

jobs:
  # The first job lints the code base
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_HTML: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JAVASCRIPT_STANDARD: true

  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      # Cancel all matrix jobs if one of them fails
      fail-fast: true
      matrix:
        # our matrix for testing acros OSs
        os: [windows-2019, ubuntu-latest]
    steps:
      - name: Set up JDK    
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"
      - name: Verify java version
        run: java -version

      - name: Code Checout
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Run tests using gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          build-root-directory: hello-spring-boot-docker

      - name: Build using Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: hello-spring-boot-docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      #- name: List docker images before build
      #  run: docker images

      - name: Build docker container using gradle/springboot
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootBuildImage
          build-root-directory: hello-spring-boot-docker
      #- name: List docker images after build
      #  run: docker images

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to docker using docker command
        run: |
          docker images 
          docker push sdsani/hello-spring-boot-docker

      #https://github.com/marketplace/actions/git-semantic-version
      - name: Symantic tagging/verioning
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          
  deploy-app:
    name: Deploy job
    runs-on: ubuntu-latest
    needs: [lint, ci]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy step
        run: echo "Deploy not implemented yet"
