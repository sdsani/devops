name: CI 
on:  
  pull_request: 
    branches: [ main ]
    paths:
      - 'hello-spring-boot-docker/**'      

  workflow_dispatch:
  
env:
  REPO_PATH: ${{github.actor}}
  ROOT_FOLDER: 'hello-spring-boot-docker'  

jobs:

  CodeCompile:
    name: Code compile
    runs-on: ${{ matrix.os }}
    strategy:
      # Cancel all matrix jobs if one of them fails
      fail-fast: true
      matrix:
        # our matrix for testing acros OSs
        os: [ubuntu-latest]
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
        with:
          github_token: env
          fetch-depth: 1
      
      - name: Set up JDK
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"

      - name: Build using Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: ${{env.ROOT_FOLDER}}

  Linter:
    name: Super linter
    runs-on: ubuntu-latest
    needs: [CodeCompile]
    
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
        with:
          github_token: env
          fetch-depth: 1
      - name: Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_HTML: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JAVASCRIPT_STANDARD: true

  Test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [CodeCompile]
    
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
        with:
          github_token: env
          fetch-depth: 0
      
      - name: Set up JDK
        uses: actions/setup-java@v1      
        with:        
          java-version: "11"
      
      - name: Run tests using gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test
          build-root-directory: ${{env.ROOT_FOLDER}}
          
  CodeQL:
    name: Run CodeQL
    runs-on: ubuntu-latest
    needs: [CodeCompile]
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
    
    steps:
    
    - name: Code Checkout
      uses: actions/checkout@v3
      with:
        github_token: env
        fetch-depth: 1
        
      # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main
    - name: Build using Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build
        build-root-directory: ${{env.ROOT_FOLDER}}    
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  WE:
   name: Anything else that we should do before merge
   if: github.event_name == 'pull_request'
   runs-on: ubuntu-latest
   needs: [CodeCompile]   
   
   steps:
     - run: |
         echo "What else should be done before merge"
         echo "1 : "$REPO_PATH
          echo "2 : "$ROOT_FOLDER
          echo "3 : "${{github.actor}}
          # Following is not valid
          echo "4 : "$github.actor
