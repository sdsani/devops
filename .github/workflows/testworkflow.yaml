name: Test workflow

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  workflow_dispatch:
  #pull_request: 
  #  branches: [ main ]
  
  #push:
  #  branches:
  #    - main
  
  #schedule:
  #  - cron: '*/30 * * * *'

env:
  REPO_PATH: $GITHUB_REPOSITORY_OWNER
  ROOT_FOLDER: 'hello-spring-boot-docker'  
  image_path: $GITHUB_REPOSITORY_OWNER/$ROOT_FOLDER
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  GKE_REGION: us-central1
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: static-site

jobs:
  onlyrunonpull:
    name: Test execution only on for pull request.
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: List for pull
        run: |
          ls -al
          echo "This job should run only only on Pull request. Current event is : $GITHUB_EVENT_NAME "
        
  runonbothpushandpull:
    name: Test execution on both pull and push requests.
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - name: List
        run: |
          ls -al
          echo "This job should run for both push and pull. Current event is : $GITHUB_EVENT_NAME "
      - name: Condition at step
        if: github.event_name == 'push'
        run: |
          echo "<<<<<<<< Step execution >>>>>>>>"
  
  #https://pakstech.com/blog/github-actions-workflow-commands/
  param_passing1:   
    name: Parameter Passing when source is a action and target is run
    runs-on: ubuntu-latest
    steps:
      - name: First step to generate params
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          
      - name: Now read the values
        run: |
          echo "${{steps.tag_version.outputs.new_tag}}"
          echo "${{steps.tag_version.outputs.previous_tag}}"
  
  # Link with #1 explains following also
  param_passing2:   
    name: Parameter Passing when both source and target steps are run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: First step to generate params
        id: sourse_step
        run: |
          git show -s --format=%an
          echo "::set-output name=author::$(git show -s --format=%an)"
          
      - name: Echo params
        run: |
          echo "${{steps.sourse_step.outputs.author}}"
          
  # Link with #1 explains following also
  param_passing3:   
    name: Parameter Passing when both source and target are run using env
    runs-on: ubuntu-latest
    steps:
      - name: First step to generate params
        id: sourse_step
        run: echo "::set-output name=ghtoken::'dummy_token_value'"
          
      - name: Echo params
        run: |
          echo $auth_name
        env:
          auth_name: ${{steps.sourse_step.outputs.ghtoken}}
          
  # Link with #1 explains following also
  param_passing4:   
    name: Parameter Passing when source is a run and target is an action
    runs-on: ubuntu-latest
    steps:
      - name: First step to generate params
        id: sourse_step
        run: echo "::set-output name=dry_run::'true'"
          
      - name: Tagging dry run
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: ${{steps.sourse_step.outputs.dry_run}}
        
      - name: Now read the values
        run: |
          echo "${{steps.tag_version.outputs.new_tag}}"
          echo "${{steps.tag_version.outputs.previous_tag}}"
          
  display_env:
    name: Test to check values
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "${{github.event.repository.name}}"
          echo "${{ github.actor }}"
          echo "${{env.image_path}}"

  test_gke_connect:

    - name: Checkout
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    name: Test to check GKE connectivity
    runs-on: ubuntu-latest
    steps:
      - run: |
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - run: |
          ls -al
          kubectl get all
